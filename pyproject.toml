[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fabricla-connector"
version = "1.0.2"
authors = [
    {name = "Ayoub KEBAILI", email = "ayoub.kebaili@domain.com"}
]
description = "A comprehensive framework for collecting and ingesting Microsoft Fabric monitoring data"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Logging",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
]
keywords = ["microsoft", "fabric", "monitoring", "azure", "log-analytics", "data-collection"]
dependencies = [
    "msal>=1.34.0",
    "requests>=2.32.5",
    "azure-core>=1.31.0",
    "azure-identity>=1.16.1",
    "azure-keyvault-secrets>=4.8.0",
    "azure-storage-blob>=12.22.0",
    "azure-storage-file-datalake>=12.16.0",
    "azure-datalake-store>=0.0.53",
    "azure-mgmt-monitor>=7.0.0,<8.0.0",
    "azure-common>=1.1.28",
    "azure-mgmt-core>=1.6.0",
    "python-dotenv>=1.1.1",
    # Use numpy <2 to remain compatible with common scientific stacks on shared runtimes
    "numpy>=1.22.4,<2.0.0",
    # pandas 2.2.x works with numpy <2; keep a narrow range to avoid pulling numpy 2.x
    "pandas>=2.2.0,<2.3.0",
    # Ensure filelock and PyJWT match other installed tool expectations
    "filelock<3.12,>=3.8.0",
    "PyJWT>=2.6.0,<3.0.0",
    # Constrain fsspec to versions compatible with datasets 2.19.x
    "fsspec<=2024.3.1,>=2023.1.0"
]

[project.urls]
Documentation = "https://github.com/Keayoub/FabricLA-Connector#readme"
Repository = "https://github.com/Keayoub/FabricLA-Connector"
"Bug Tracker" = "https://github.com/Keayoub/FabricLA-Connector/issues"
Changelog = "https://github.com/Keayoub/FabricLA-Connector/blob/main/CHANGELOG.md"

[project.scripts]
fabric-monitor = "fabricla_connector.workflows:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0"
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.package-data]
fabricla_connector = ["*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "1.0.2"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "1.0.2"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/site-packages/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]